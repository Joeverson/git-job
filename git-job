#!/bin/bash

task_id=$1

# constant onde fica as informações de logs e de timer
FILE_NAME_SETTINGS='~/git-job.txt.log'

# pequeno help de comandos
help() {
  echo -e "\n @@ Script para facilitar a criação e atuallização de novas Branchs @@\n"
  echo -e "\n Exemplo:"
  echo -e "\n- Criando uma nova branch atualizada com as ultimas coisas da branche de desenvolvimento"
  echo -e "\n\t$ git-job [branch] [task_id] [title-of-the-task]"
  echo -e "\n- Abrindo o Help"
  echo -e "\n\t$ git-job --help"
  echo -e "\n- Finalizando o timer da task"
  echo -e "\n\t$ git-job --stop"
}

# carregando variaveis de configurações
loadFileConfig() {
  list=$(awk '/=/ {print $1}' ~/Documents/dup/git-job/credentials.op.conf)

  # My input source is the contents of a variable called $list #
  while IFS= read -r pkg
  do
    VALUE=${pkg#*=}
    # printf 'Installing php package %s...\n' "${pkg%=$VALUE} $VALUE"
    eval "${pkg%=$VALUE}"="$VALUE"
    # /usr/bin/apt-get -qq install $pkg
  done <<< "$list"
}

# conectando a api do open project e pegando o nome da task
getNameTaskOpenProject() {
  TASK_NAME=$(curl -u apikey:$TOKEN http://$SERVER_OP/api/v3/work_packages/$1 | jq '.subject' )
  
  # formatando o nome para apresentar
  TASK_NAME=${TASK_NAME//  / }
  TASK_NAME=${TASK_NAME//\\/}
  TASK_NAME=${TASK_NAME//\"/}
  TASK_NAME=${TASK_NAME//\'/}
  TASK_NAME=${TASK_NAME//\`/}
  TASK_NAME=${TASK_NAME//[/}
  TASK_NAME=${TASK_NAME//]/}
  TASK_NAME=${TASK_NAME// /-}  
}

# timer counter for init the job
timer() {
  case $1 in
    stop) saveSettings "start-time:$(date '+%Y-%m-%d %H:%M:%S')" ;;
    start)
      cleanfile
      saveSettings "start-time:$(date '+%Y-%m-%d %H:%M:%S')" ;;
  esac
}

# escrevendo no arquivo de configuraçaõ
saveSettings() {
  `echo $1 >> ~/git-job.txt.log`
}
# limpando o arquivo de datas
cleanfile() {
  if [ -w $FILE_NAME_SETTINGS ];
  then
    rm $FILE_NAME_SETTINGS
  fi
}

# fazendo o fluxo do git para alterar a branch baixar as coisas e atualizar
doGitFlow() {
  git checkout $BRANCH_UPLEVEL && git pull origin $BRANCH_UPLEVEL &&  git checkout -b $task_id"_"$TASK_NAME
}

main() {
  if [ -z $1 ];
  then
    echo 'Você precisa passar algum parâmetro, saiba mais com o comando: "git-job --help"'
  else
    case $1 in
      --help) help ;;
      --stop) timer 'stop' ;;
      *) 
        getNameTaskOpenProject $task_id
        doGitFlow ;;
    esac
  fi
}

# INICIALIZAÇÂO

loadFileConfig
main $1
